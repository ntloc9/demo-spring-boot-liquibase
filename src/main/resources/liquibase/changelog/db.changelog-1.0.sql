--liquibase formatted sql

-- changeset Loc:1670042281445-1
-- precondition onFail:MARK_RAN onError:MARK_RAN
-- precondition-sql-check expectedResult:0 select count(*) from information_schema.tables where table_name = 'category'
CREATE TABLE "category" ("id" INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL, "cate_name" VARCHAR NOT NULL, CONSTRAINT "category_pkey" PRIMARY KEY ("id"));
-- rollback drop table category cascade

-- changeset Loc:1670042281445-2
-- precondition onFail:MARK_RAN onError:MARK_RAN
-- precondition-sql-check expectedResult:0 select count(*) from information_schema.tables where table_name = 'product'
CREATE TABLE "product" ("id" INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL, "p_name" VARCHAR NOT NULL, "price" numeric NOT NULL, "short_description" VARCHAR(50), "description" VARCHAR, "category_id" INTEGER, CONSTRAINT "product_pkey" PRIMARY KEY ("id"));
ALTER TABLE "product" ADD CONSTRAINT "product_category_id_fkey" FOREIGN KEY ("category_id") REFERENCES "category" ("id") ON UPDATE NO ACTION ON DELETE NO ACTION;
-- rollback drop table product

-- changeset Loc:initdata
-- precondition onFail:MARK_RAN onError:MARK_RAN
-- precondition-sql-check expectedResult:0 select count(*) from product
insert into category (cate_name) values ('Fresh'), ('Packaged');
insert into product (p_name, price, short_description, description, category_id) values ('yen 1', 10, 'test', '', (select min(id) from category));
-- rollback truncate category, product

-- changeset Loc:1670042281445-3
-- precondition onFail:MARK_RAN onError:MARK_RAN
-- precondition-sql-check expectedResult:1 select count(*) from product
insert into product (p_name, price, short_description, description, category_id) values ('yen 2', 20, 'test2', '', (select max(id) from category));
-- rollback truncate category, product

